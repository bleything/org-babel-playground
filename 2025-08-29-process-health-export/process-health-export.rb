#!/usr/bin/env ruby

### WARNING: This file is generated by babel. Changes will be lost.

require 'json'

export = JSON.load_file("export.json")
workouts = export['data']['workouts']

### remove unwanted fields

filtered = workouts.map do |workout|
  workout.delete 'location'
  workout.delete 'name'

  workout.delete 'intensity'
  workout.delete 'metadata'

  workout.delete 'activeEnergy'
  workout.delete 'activeEnergyBurned'
  workout.delete 'heartRateRecovery'

  workout.delete 'route'
  workout.delete 'heartRateData'
  workout.delete 'walkingAndRunningDistance'

  workout
end

### flatten complex keys

targets = %w[
  distance elevationUp humidity intensity temperature
]

filtered.map! do |workout|
  targets.each do |target|
    next unless workout[target]

    workout["#{target}_qty"] = workout[target]['qty']
    workout["#{target}_units"] = workout[target]['units']
    workout.delete target
  end

  workout
end

### aggregate step count

filtered.map! do |workout|
  next unless workout['stepCount']

  # this should almost always be "steps" and I'd be tempted to hard-code that but
  # without a way to be sure I think it's safer to just leave a trap in here so we
  # can address it if it comes up
  units = workout['stepCount'].map {|sc| sc['units'] }.uniq
  raise "unknown stepCount units: #{units.join ' '}" if units.size > 1

  workout['stepCount_units'] = units.first
  workout['stepCount_qty'] = workout['stepCount'].map {|sc| sc['qty'] }.sum

  workout['stepCount'].map! do |sc|
    sc.delete 'source'
    sc.delete 'units'

    sc
  end

  workout
end

### save and report

File.open('out.json', 'w') {|f| f.puts filtered.to_json }
# File.open('out.json', 'w') {|f| f.puts JSON.pretty_generate(filtered) }

old_size = File.size("export.json")
new_size = File.size("out.json")

# cast these to floats so we get more resolution for the percentage calc
reduction = (old_size - new_size).to_f / old_size.to_f

puts "Processed %i workouts. File size reduced by %.2f%%, from %i to %i bytes" % [
  filtered.count,
  reduction * 100.0,
  old_size,
  new_size
]
